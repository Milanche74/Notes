{
  "libraries": [
    {
      "name": "+",
      "documentation": "",
      "description": "",
      "installation": "",
      "installSnippet": "",
      "implementation": "",
      "implementationSnippet": "",
      "additional": [],
      "tags": [],
      "id": 1
    },
    {
      "name": "Webpack",
      "documentation": "https://webpack.js.org/concepts/",
      "description": "JS Module Bundler<br>",
      "installation": "Install webpack using npm. Webpack-cli and webpack-dev-server are required for using webpack as a dev server",
      "installSnippet": "npm i webpack webpack-cli webpack-dev-server",
      "implementation": "Configure webpack in webpack.config.json and install&amp;apply additional loaders",
      "implementationSnippet": "const path = require('path');   \nconst HtmlWebpackPlugin = require('html-webpack-plugin');   \n       \nmodule.exports = {   \n      mode: 'development',   \n      entry: './src/index.js',   \n      output: {   \n        path: path.resolve(__dirname, './dist'),   \n        filename: 'main.bundle.js',   \n      },   \n      target: 'web',   \n      devtool: 'inline-source-map',   \n      devServer: {   \n        static: './dist',   \n        open: true,   \n        hot: false,   \n        liveReload: true,   \n      },   \n      module: {   \n        rules: [   \n          {   \n            test: /\\.js$/,   \n            exclude: /node_modules/,   \n            use: {   \n              loader: 'babel-loader',   \n              options: {   \n                presets: ['@babel/preset-env'],   \n              },   \n            },   \n          },   \n        ],   \n      },   \n      plugins: [   \n        new HtmlWebpackPlugin({   \n          template: './src/index.html',   \n          filename: 'index.html',   \n        }),   \n      ],   \n    };",
      "additional": [
        {
          "textField": "- HTMLWepbackPlugin creates HTML file in /dist folder. It is possible to pass in a custom template"
        },
        {
          "textField": "- Loaders are applied in reverse order =&gt; ['style-loader', 'css-loader']"
        }
      ],
      "tags": [
        "#bundler",
        "#js"
      ],
      "id": 2
    },
    {
      "name": "Git",
      "documentation": "https://git-scm.com/book/en/v2",
      "description": "Version management tool",
      "installation": "Linux installation:",
      "installSnippet": " sudo apt install git-all",
      "implementation": "CLI commands for setting up local and remote repository",
      "implementationSnippet": "git init\ngit add README.md\ngit commit -m \"first commit\"\ngit branch -m master main\ngit remote add origin https://github.com/Milanche74/Notes.git\ngit push -u origin main\n\n// cloning\ngit clone <link> <set-name (opt)>",
      "tags": [
        "#version-control"
      ],
      "additional": [
        {
          "textField": "- On Linux, authentication key is required for pull and push requests<br>"
        },
        {
          "textField": "Branching:&nbsp;",
          "codeSnippet": "// add new branch \ngit branch new_branch\n\n// checkout to it\ngit checkout new_branch\n\n// shortened\ngit checkout -b new_branch"
        },
        {
          "textField": "Merging:<br>",
          "codeSnippet": "// navigate to destination branch\ngit checkout destination_branch\n\n// perform merge\ngit merge dev_branch"
        },
        {
          "textField": "Rebase - performed to align dev branch progress with base (main, master) branch:",
          "codeSnippet": "git rebase destination_branch <branch_to_checkout_to>"
        }
      ],
      "id": 3
    },
    {
      "name": "Lit",
      "documentation": "https://lit.dev/docs/",
      "description": "Library that covers usage of web components",
      "installation": "NPM Install:",
      "installSnippet": "npm i lit",
      "implementation": "Import lit to JS file, declare and export a class and set it up with properties, styles and render method.<br>",
      "implementationSnippet": "import {LitElement, html} from 'lit';\n\nclass ToDoList extends LitElement {\n  static properties = {\n    listItems: {},\n  };\n\n  constructor() {\n    super();\n    this.listItems = [\n      {text: 'Start Lit tutorial', completed: true},\n      {text: 'Make to-do list', completed: false},\n    ];\n  }\n\n  render() {\n    return html`\n      <h2>To Do</h2>\n      <ul>\n         <!-- TODO: Render list items. -->\n      </ul>\n      <input id=\"newitem\" aria-label=\"New item\">\n      <button @click=${this.addToDo}>Add</button>\n    `;\n  }\n\n  // TODO: Add click handler.\n  addToDo() {}\n}\ncustomElements.define('todo-list', ToDoList);\n\n\n// set or remove attr based on expression\n\n<p ?hidden=${this.isHidden}>I may be in hiding.</p>\n\n\n// custom converter \n\nstatic properties = {\n    data: {\n      converter: (attrValue) => {\n        if (attrValue) return JSON.parse(attrValue);\n      },\n    },\n    editable: { type: Boolean },\n  };\n",
      "tags": [
        "#web-components",
        "#library"
      ],
      "additional": [
        {
          "textField": "- Events must have a callback when passing a certain data =((e) =&gt;{}) !!!"
        },
        {
          "textField": "- Custom properties are inheritable"
        },
        {
          "textField": "- There has to be a custom converter for attr values that are of type object/array"
        }
      ],
      "id": 4
    },
    {
      "name": "Babel",
      "documentation": "https://babeljs.io/docs/en/",
      "description": "Javascript Compiler tool",
      "installation": "Run these commands to prepare configuration with webpack:",
      "installSnippet": "npm i @babel/preset-env babel-loader\n\n// for REACT \nnpm i @babel/core @babel/preset-react\n\n// there may be a need to install additional plugins:\nnpm i core-js regeneration-runtime etc",
      "implementation": "babel.config.json file handles presets and plugins",
      "implementationSnippet": "// in babel.config.json\n\n{\n  \"presets\": [\"@babel/preset-env\", \"@babel/preset-react\"],\n  \"plugins\": [\n    [\n      \"@babel/plugin-proposal-class-properties\",\n      {\n        \"loose\": true\n      }\n    ],\n    [\"@babel/plugin-proposal-private-methods\", { \"loose\": true }]\n  ]\n}\n\n// in webpack.config.js\n\nmodule: {\n    rules: [\n      {\n        test: /\\.js$/,\n        exclude: /node_modules/,\n        use: {\n          loader: \"babel-loader\",\n          options: {\n            presets: [\"@babel/preset-env\"],\n          },\n        },\n      },\n    ],\n  },\n",
      "additional": [],
      "tags": [
        "#compiler",
        "#js"
      ],
      "id": 5
    },
    {
      "name": "ESLint",
      "documentation": "https://eslint.org/docs/user-guide/getting-started",
      "description": "Linter tool for identifying and reporting on JavaScript patterns.",
      "installation": "Install inside project folder:",
      "installSnippet": "npm install eslint --save-dev\n\n// init a config file from CLI \nnpm init @eslint/config",
      "implementation": "Edit configuration file: Add plugins and set rules.&nbsp;",
      "implementationSnippet": "module.exports = {\n  env: {\n    browser: true,\n    es2021: true,\n  },\n  extends: [\"plugin:wc/recommended\", \"plugin:lit/recommended\"],\n  parserOptions: {\n    ecmaVersion: \"latest\",\n    sourceType: \"module\",\n  },\n  rules: {},\n};\n\n// run command from terminal\nnpx eslint --fix .",
      "tags": [
        "#linter",
        "#formatter",
        "#code-quality"
      ],
      "additional": [
        {
          "textField": "- ESLint should be used as code quality tool, not a formatter."
        },
        {
          "textField": "- It's recommended to define script in package.json that will run multiple linters"
        },
        {}
      ],
      "id": 6
    },
    {
      "name": "Prettier",
      "documentation": "https://prettier.io/docs/en/install.html",
      "description": "Code formatter tool",
      "installation": "Despite it being integrated in code editor, it is recommended to initialize Prettier in each project<br>",
      "installSnippet": "npm install --save-dev --save-exact prettier",
      "implementation": "Configure specific rules in prettierrc.json file. It will have precedence to code editor configs.<br><br>When using as an extension in code editor, add configuration to settings.json in the editor<br>",
      "implementationSnippet": "{\n  \"trailingComma\": \"es5\",\n  \"printWidth\": 100,\n  \"semi\": true,\n  \"singleQuote\": true\n}\n\n// command to formatt all files\nnpx prettier --write .\n\n// configure on save\n \"editor.formatOnSave\": true,",
      "tags": [
        "#formatter",
        "#code-quality"
      ],
      "additional": [
        {
          "textField": "- Might need additional packages for integrations with other linters.&nbsp;"
        },
        {
          "textField": "- Add prettierignore file to specify files to be ignored<br>"
        }
      ],
      "id": 7
    },
    {
      "name": "HighCharts",
      "documentation": "https://www.highcharts.com/demo/bar-basic",
      "description": "Library that allows superior data visualization",
      "installation": "NPM installation",
      "installSnippet": "npm install highcharts --save\n\n//addition for REACT \nnpm i highcharts-react-official --save",
      "implementation": "For React:<br>- import both Highcharts modules and define props for HC component<br>- describe chart in options object",
      "implementationSnippet": "<HighchartsReact highcharts={Highcharts} options={chartOptions} />\n\n// define options \n          {\n            title: {\n              text: i18n.t('population')\n            },\n            yAxis: {\n              title: {\n                text: i18n.t('values')\n              }\n            },\n            series: [\n              {\n                name: i18n.t('population'), \n                data: getPopulation(data),\n              },\n              {\n                name: i18n.t('projected'),\n                data: getEstimatedPopulation(data),\n              },\n            ],\n          };",
      "additional": [
        {
          "textField": "- It is possible to apply custom styling, will do furher research"
        }
      ],
      "tags": [
        "#react",
        "#data-visualization",
        "#plugin",
        "#library"
      ],
      "id": 8
    },
    {
      "name": "Lodash",
      "documentation": "https://lodash.com/",
      "description": "A modern Javascript utility library delivering modularity, performance &amp; extras.",
      "installation": "NPM Install:&nbsp;",
      "installSnippet": "npm i --save lodash",
      "implementation": "Usefull methods:<br>- reject();<br>- flow();<br>- get();<br>- isNil();<br>- map();<br>- uniq();",
      "implementationSnippet": "const someFunc = flow(\n  reject(flow(get('projected'), isNil)),\n  lmap(({year, projected}) => [year, projected])\n)\nlet arrayOfOrigValues = uniq(data._value.map(({ city }) => city));",
      "tags": [
        "#library",
        "#data-handler"
      ],
      "additional": [],
      "id": 9
    },
    {
      "name": "React-WordCloud",
      "documentation": "https://www.npmjs.com/package/react-wordcloud",
      "description": "Word-cloud component with interactive features",
      "installation": "NPM installation: Package requires react 16.13.0 as peer dependency",
      "installSnippet": "npm install --save  react-wordcloud --legacy-peer-deps",
      "implementation": "Import package to JS file and define props like !words, ?options and ?callbacks",
      "implementationSnippet": "import React from 'react';\nimport ReactWordcloud from 'react-wordcloud';\n \nconst words = [\n  {\n    text: 'told',\n    value: 64,\n  },\n  {\n    text: 'mistake',\n    value: 11,\n  },\n  {\n    text: 'thought',\n    value: 16,\n  },\n  {\n    text: 'bad',\n    value: 17,\n  },\n]\nconst callbacks = {\n  // some functions\n}\nconst options = {\n  rotations: 2,\n  rotationAngles: [-90, 0],\n};\n \nfunction SimpleWordcloud() {\n  return <ReactWordcloud words={words} />\n}",
      "tags": [
        "#library",
        "#react",
        "#plugin",
        "#data-visualization"
      ],
      "additional": [
        {
          "textField": "- Callbacks object comes in handy for handling user events",
          "codeSnippet": "const callbacks = {\n  getWordColor: word => word.value > 50 ? \"blue\" : \"red\",\n  onWordClick: console.log,\n  onWordMouseOver: console.log,\n  getWordTooltip: word => `${word.text} (${word.value}) [${word.value > 50 ? \"good\" : \"bad\"}]`,\n}"
        }
      ],
      "id": 10
    },
    {
      "name": "i18n",
      "documentation": "https://www.i18next.com/overview/getting-started",
      "description": "<span data-offset-key=\"ed466c53b77c41caaad19142c853679d:0\">i18next is an </span><strong data-slate-leaf=\"true\" data-offset-key=\"ed466c53b77c41caaad19142c853679d:1\" class=\"r-b88u0q\">internationalization-framework</strong><span data-offset-key=\"ed466c53b77c41caaad19142c853679d:2\" data-slate-fragment=\"JTdCJTIyb2JqZWN0JTIyJTNBJTIyZG9jdW1lbnQlMjIlMkMlMjJkYXRhJTIyJTNBJTdCJTdEJTJDJTIybm9kZXMlMjIlM0ElNUIlN0IlMjJvYmplY3QlMjIlM0ElMjJibG9jayUyMiUyQyUyMnR5cGUlMjIlM0ElMjJwYXJhZ3JhcGglMjIlMkMlMjJpc1ZvaWQlMjIlM0FmYWxzZSUyQyUyMmRhdGElMjIlM0ElN0IlN0QlMkMlMjJub2RlcyUyMiUzQSU1QiU3QiUyMm9iamVjdCUyMiUzQSUyMnRleHQlMjIlMkMlMjJsZWF2ZXMlMjIlM0ElNUIlN0IlMjJvYmplY3QlMjIlM0ElMjJsZWFmJTIyJTJDJTIydGV4dCUyMiUzQSUyMkkxOG5leHQlMjBpcyUyMGFuJTIwJTIyJTJDJTIybWFya3MlMjIlM0ElNUIlNUQlMkMlMjJzZWxlY3Rpb25zJTIyJTNBJTVCJTVEJTdEJTJDJTdCJTIyb2JqZWN0JTIyJTNBJTIybGVhZiUyMiUyQyUyMnRleHQlMjIlM0ElMjJpbnRlcm5hdGlvbmFsaXphdGlvbi1mcmFtZXdvcmslMjIlMkMlMjJtYXJrcyUyMiUzQSU1QiU3QiUyMm9iamVjdCUyMiUzQSUyMm1hcmslMjIlMkMlMjJ0eXBlJTIyJTNBJTIyYm9sZCUyMiUyQyUyMmRhdGElMjIlM0ElN0IlN0QlN0QlNUQlMkMlMjJzZWxlY3Rpb25zJTIyJTNBJTVCJTVEJTdEJTJDJTdCJTIyb2JqZWN0JTIyJTNBJTIybGVhZiUyMiUyQyUyMnRleHQlMjIlM0ElMjIlMjB3cml0dGVuJTIwaW4lMjBhbmQlMjBmb3IlMjBKYXZhU2NyaXB0JTIyJTJDJTIybWFya3MlMjIlM0ElNUIlNUQlMkMlMjJzZWxlY3Rpb25zJTIyJTNBJTVCJTVEJTdEJTVEJTJDJTIya2V5JTIyJTNBJTIyNzRiZjkwNjA3ZjI1NGRjMzhmYWQ3M2FhMjU5MWJjZGUlMjIlN0QlNUQlMkMlMjJrZXklMjIlM0ElMjI3MTA2OTgyNDdjYjI0NDRhYWZkOTkzMDdiMzZhMmNkZSUyMiU3RCU1RCUyQyUyMmtleSUyMiUzQSUyMmJjMmJiZjUwNGRmODQzMGJiYWY1NWVlMzA1ZmIyNjg4JTIyJTdE\"> written in and for JavaScript</span>",
      "installation": "NPM install:",
      "installSnippet": "npm i --save i18next",
      "implementation": "Step 1 =&gt; make new .js file to initialize and configure i18next;<br>Step 2 =&gt; import created module and use it&nbsp;<br>Step 3 =&gt; import i18next from node_modules to use event listeners",
      "implementationSnippet": "// STEP 1\n\nimport i18next from 'i18next';\n\nimport enTranslation from './locales/en-US.json';\nimport huTranslation from './locales/hu-HU.json';\nimport srTranslation from './locales/sr-RS.json';\n\ni18next\n  .init({\n    lng: 'en-US',\n    fallbackLng: 'en-US',\n    debug: true,\n    resources: {\n      'en-US': {\n        translation: enTranslation,\n      },\n    },\n  })\n  .then(function (t) {\n    // initialized and ready to go!\n    console.info('i18next is initialized.', t('welcome'));\n  });\n\ni18next.addResourceBundle('hu-HU', 'translation', huTranslation);\ni18next.addResourceBundle('sr-RS', 'translation', srTranslation);\n\nexport default i18next;\n\n\n//STEP 2 \n\nheader.innerText = i18n.t('title');\n\n\n// STEP 3\n\ni18next.on('languageChanged', () => {\n  renderAppInterface();\n});\n",
      "additional": [
        {
          "textField": "There is possibly a more optimised approach for using with JS frameworks - ex. react-i18next"
        }
      ],
      "tags": [
        "#framework",
        "#internationalization",
        "#js"
      ],
      "id": 11
    },
    {
      "name": "React-range",
      "documentation": "https://github.com/tajo/react-range/tree/master/examples",
      "description": "Range slider component for React",
      "installation": "NPM Installation",
      "installSnippet": "npm i react-range",
      "implementation": "Define a component and set attributes as given:&nbsp;",
      "implementationSnippet": "return(\n  <Range\n    values={values}\n    step={STEP}\n    min={MIN}\n    max={MAX}\n    rtl={rtl}\n    onChange={(values) => setValues(values)}\n    renderTrack={({ props, children }) => (\n      <div\n        onMouseDown={props.onMouseDown}\n        onTouchStart={props.onTouchStart}\n        style={{\n          ...props.style,\n          height: '36px',\n          display: 'flex',\n          width: '100%'\n        }}\n      >\n        <div\n          ref={props.ref}\n          style={{\n            height: '5px',\n            width: '100%',\n            borderRadius: '4px',\n            background: getTrackBackground({\n              values,\n              colors: ['#ccc', '#548BF4', '#ccc'],\n              min: MIN,\n              max: MAX,\n              rtl\n            }),\n            alignSelf: 'center'\n          }}\n        >\n          {children}\n        </div>\n      </div>\n    )}\n    renderThumb={({ index, props, isDragged }) => (\n      <div\n        {...props}\n        style={{\n          ...props.style,\n          height: '42px',\n          width: '42px',\n          borderRadius: '4px',\n          backgroundColor: '#FFF',\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n          boxShadow: '0px 2px 6px #AAA'\n        }}\n      >\n        <div\n          style={{\n            position: 'absolute',\n            top: '-28px',\n            color: '#fff',\n            fontWeight: 'bold',\n            fontSize: '14px',\n            fontFamily: 'Arial,Helvetica Neue,Helvetica,sans-serif',\n            padding: '4px',\n            borderRadius: '4px',\n            backgroundColor: '#548BF4'\n          }}\n        >\n          {values[index].toFixed(1)}\n        </div>\n        <div\n          style={{\n            height: '16px',\n            width: '5px',\n            backgroundColor: isDragged ? '#548BF4' : '#CCC'\n          }}\n        />\n      </div>\n    )}\n  />\n);",
      "tags": [
        "#plugin",
        "#react"
      ],
      "additional": [
        {
          "textField": "- If values are dynamically loaded, calculate steps attribute based on those values;"
        },
        {
          "textField": "- Track background color can be determined using getTrackBackground() based on values."
        }
      ],
      "id": 12
    },
    {
      "name": "Highcharts - accessibility",
      "documentation": "https://www.highcharts.com/docs/accessibility/accessibility-module",
      "description": "Note demonstrates how to use various accessibility features within Highcharts",
      "implementation": "Import accessibility module:",
      "implementationSnippet": "import Highchart from 'highcharts';\nimport accessibility from 'highcharts/modules/accessibility';\n\naccessibility(Highchart)",
      "tags": [
        "#highcharts",
        "#accessibility",
        "#a11y"
      ],
      "additional": [
        {
          "headerText": "Screen readers",
          "codeSnippet": "// description that screen readers can pick up\naccessibility: {\n  description: '<someDescription>'\n}\n\n// configure SR behaviour\naccessibility: {\n    point: {\n        descriptionFormatter: <someFunction>,\n        valueDescriptionFormat: '{index}. {point.name}, {point.y}.'\n    }\n}\n\n// announce new data with dynamic charts or drill-downs\naccessibility: {\n    announceNewData: {\n        enabled: true\n    }\n}\n\n// remove treshold for large data\naccessibility: {\n    series: {\n        pointDescriptionEnabledTreshold: false\n    }\n}\n\n// expose data series as a group\nseries: {\n    accessibility: {\n        exposeAsGroupOnly: true\n    }\n}\n"
        },
        {}
      ],
      "id": 13
    },
    {
      "name": "Docker",
      "documentation": "https://docs.docker.com/",
      "description": "Software development tool used to containerize apps with all dependencies and configuration",
      "installation": "To install Docker Desktop on Linux, you'll need to :<br>- set up package repo;<br>- download latest DEB package (https://docs.docker.com/desktop/release-notes/);<br>- and install it with apt:",
      "installSnippet": "// setup repo\nsudo apt-get install \\\n    ca-certificates \\\n    curl \\\n    gnupg \\\n    lsb-release\n\nsudo mkdir -p /etc/apt/keyrings\n\ncurl -fsSL https://download.docker.com/linux/debian/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg\n\necho \\\n  \"deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/debian \\\n  $(lsb_release -cs) stable\" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null\n\n// install with apt\nsudo apt-get update\nsudo apt-get install ./docker-desktop-<version>-<arch>.deb",
      "implementation": "Create and run container or use .yaml file:&nbsp;",
      "implementationSnippet": "// run manually\ndocker run <image> -p<HOST-PORT>:<CONTAINER-PORT>\n\n// run from file\ndocker-compose -f <FILENAME> up \n\n// example of .yml file \nversion: '3'\nservices:\n  # my-app:\n  # image: ${docker-registry}/my-app:1.0\n  # ports:\n  # - 3000:3000\n  mongodb:\n    image: mongo\n    ports:\n      - 27017:27017\n    environment:\n      - MONGO_INITDB_ROOT_USERNAME=admin\n      - MONGO_INITDB_ROOT_PASSWORD=password\n    volumes:\n      - mongo-data:/data/db\n  mongo-express:\n    image: mongo-express\n    restart: always # fixes MongoNetworkError when mongodb is not ready when mongo-express starts\n    ports:\n      - 8080:8081\n    environment:\n      - ME_CONFIG_MONGODB_ADMINUSERNAME=admin\n      - ME_CONFIG_MONGODB_ADMINPASSWORD=password\n      - ME_CONFIG_MONGODB_SERVER=mongodb\nvolumes:\n  mongo-data:\n    driver: local\n",
      "tags": [
        "#js",
        "#docker",
        "#deployment",
        "#virtualMachine"
      ],
      "additional": [
        {
          "textField": "Useful container debugging tips",
          "codeSnippet": "docker logs <CONTAINER-ID>\n\ndocker exec -it <CONTAINER-ID> /bin/(bash OR sh)"
        },
        {
          "headerText": "Build images using Dockerfile",
          "codeSnippet": "docker build -t <IMG-NAME>:<VERSION/TAG> <DOCKERFILE DESTINATION>\n\n// Demo of Dockerfile\nFROM node:12-alpine as base\n\nRUN apk add --no-cache openssh git\n\nHEALTHCHECK --interval=10s CMD [\"wget\", \"--spider\", \"http://127.0.0.1:8080/healthz\"]\nEXPOSE 8080\n\nCOPY /.npmrc /root/.npmrc\n\nWORKDIR /node\n\nARG NODE_ENV=development\nENV NODE_ENV=${NODE_ENV} \\\n    PATH=/node/node_modules/.bin:$PATH\n\nCOPY package.json package-lock.json ./\nRUN npm ci\nWORKDIR /node/src\nCOPY ./src .\n\nFROM node:10-alpine\n\nEXPOSE 8080\nWORKDIR /node\n\nENV NODE_ENV=${NODE_ENV} \\\n    PATH=/node/node_modules/.bin:$PATH\n\nCOPY --from=base /node/node_modules node_modules\nCOPY --from=base /node/src/ src\nCOPY --from=base /node/package.json package.json\n\nCMD [\"node\", \"./src\"]\n"
        },
        {
          "textField": "Data persistance is achieved by aligning host and virtual file system",
          "codeSnippet": "<IMG-NAME>:\n  volumes:\n   - <HOST-FILE>:<CONTAINER-FILE>\nvolumes:\n  <HOST-FILE>\n    driver: local"
        }
      ],
      "id": 14
    },
    {
      "name": "FullStack eXchange",
      "documentation": "",
      "description": "Various notes...",
      "tags": [
        "#conference",
        "#storybook",
        "#DevTools",
        "#debugging",
        "#fwa",
        "#a11y",
        "#serverless",
        "#testing"
      ],
      "additional": [
        {
          "headerText": "DevTools",
          "codeSnippet": "Throttle network and hardware to reproduce client's environment\n\nconsole.time(), timeLog(), timeEnd()\nconsole.trace()\n\nExternal error\nCheck Network tab, copy request and run in console if can't see otherwise\nTrace network\n{} action button to expand bundled files, source map for minified\n\n\nmemory tab recording, compare env profiles \nblue line is possible memory leak\n\ndetached element - window stores element that is removed from the DOM\n\n\nperformance tab - practice recording succesfully\nexperience map: zoom on first row chart =>\n - red triangle, smthng wrong\n - zoom on function\n\n\n\nincognito window\n\nreproduce, \nexternal issues, \ndata handling,\ndetached elems & untracked obj, \ninterface breakdown (simplify logic)"
        },
        {
          "headerText": "Storybook",
          "codeSnippet": "- color palette as a control\n"
        },
        {
          "headerText": "Accessibility",
          "codeSnippet": "- how to test? \n- think of a11y when changing features\n- d&d https://medium.com/salesforce-ux/4-major-patterns-for-accessible-drag-and-drop-1d43f64ebf09\n      https://www.w3.org/WAI/WCAG22/Understanding/dragging-movements"
        },
        {
          "headerText": "GitHub",
          "codeSnippet": "- git reflog // log of everything\n- git fsck   // recover from everything else\n- git config --global rerere.enabled true // reuse recorder resolution"
        },
        {
          "headerText": "Functional Web Apps",
          "codeSnippet": "- Model (DB) => Controller (app) => View\n- Physical arch: CDN => Load balancer => Web servers => Cache and db server\n- Pheonix project, Accelerate\n- Jamstack: DATA => View + App, Tradeoffs? (dynamic wa)\n- FWA:\n  - HTML first (dynamic personalization and a11y priority)\n  - Cloud function centric mode\n  - On-demand database\n  - Declarative deployment (explicitly defined Infra as Code)\n- logical arch: View / Controller function => Database\n- physical arch: CDN => Static assets\n                     => Cloud stuff => Managed DB\n- Downsides: Coldstart, Database story still emergent, writing docs complex\n             All-in with a cloud vendor\n- HTML-first progressive enhancement\n- Cloud funcs centered development model\n- Managed database built-in\n- Explicit declarative deployment IaC\n- Architect\n- fwa.dev\n- begin.com"
        },
        {
          "headerText": "Micro Frontends",
          "codeSnippet": "- pieces of project, owned by teams\n- architect the project \n- learn what's CI/CD\n- Monolith VS MicroFE\n- made 2 screenshots"
        },
        {
          "headerText": "TS beyond stack",
          "codeSnippet": "CDK - Cloud Development Kit\nStack - logical grouping of app\nConstructs++ => stack, contains lambda func, queue, bucket, api\n- cdk diff: compare deployed stack with current state\n- cdk synth: emits the synthesized CloudFormation template\n- cdk deploy: deploy this stack to your default AWS account/region\n\nhttps://github.com/ryancormack/cdk-webapp"
        },
        {
          "headerText": "JS Testing Pyramid",
          "codeSnippet": "       e2e\n   Integration\nLots of unit tests\n\nscreenshot taken showing useful tools for various testing\n\ncomponent tests - interaction\nGH actions test report\nunit test use mocked deps, integration and e2e use real deps\n\nhttps://github.com/robrich/web-test-all-the-things"
        },
        {
          "headerText": "Works on my machine",
          "codeSnippet": "REASONS:\n\n-complex envs: Serverless, Micro Services, Kubernetes\n\n-what the user was doing, \n-what device/browser/env, \n-what requests were triggered\n\n- data cause \n\nBEST PRACTISES:\n - command line debugging\n - local debugging\n - logging and tracing\n - remote debugging\n\nfor Kubernetes: \n - Tilt: allows to create prod env locally\nfor Serverless:\n - SAM create serverless env and func, also locally\n\nLive debugging?\n"
        }
      ],
      "id": 15
    },
    {
      "name": "Vizia deployment",
      "documentation": "",
      "description": "Steps how to deploy VIZIA - kudos to Oscar",
      "implementationSnippet": "Containers are being used. Kubernetes orchestrates. Concourse is glue \nof CI/CD pipeline - VPN. Katalog gives instructions for Kubernetes to run service.\nbrandwatch.dev => deploy to production (slipstream)",
      "tags": [
        "#deployment"
      ],
      "additional": [
        {
          "headerText": "Pipeline notes",
          "codeSnippet": "Concourse build images => pushes to brandwatch.dev (slipstream)\n=> to Kubernetes => to GCP or AWS"
        }
      ],
      "id": 16
    }
  ]
}
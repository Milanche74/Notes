{
  "libraries": [
    {
      "name": "+",
      "documentation": "",
      "description": "",
      "installation": "",
      "installSnippet": "",
      "implementation": "",
      "implementationSnippet": "",
      "additional": [],
      "tags": [],
      "id": 1
    },
    {
      "name": "Webpack",
      "documentation": "https://webpack.js.org/concepts/",
      "description": "JS Module Bundler<br>",
      "installation": "Install webpack using npm. Webpack-cli and webpack-dev-server are required for using webpack as a dev server",
      "installSnippet": "npm i webpack webpack-cli webpack-dev-server",
      "implementation": "Configure webpack in webpack.config.json and install&amp;apply additional loaders",
      "implementationSnippet": "const path = require('path');   \nconst HtmlWebpackPlugin = require('html-webpack-plugin');   \n       \nmodule.exports = {   \n      mode: 'development',   \n      entry: './src/index.js',   \n      output: {   \n        path: path.resolve(__dirname, './dist'),   \n        filename: 'main.bundle.js',   \n      },   \n      target: 'web',   \n      devtool: 'inline-source-map',   \n      devServer: {   \n        static: './dist',   \n        open: true,   \n        hot: false,   \n        liveReload: true,   \n      },   \n      module: {   \n        rules: [   \n          {   \n            test: /\\.js$/,   \n            exclude: /node_modules/,   \n            use: {   \n              loader: 'babel-loader',   \n              options: {   \n                presets: ['@babel/preset-env'],   \n              },   \n            },   \n          },   \n        ],   \n      },   \n      plugins: [   \n        new HtmlWebpackPlugin({   \n          template: './src/index.html',   \n          filename: 'index.html',   \n        }),   \n      ],   \n    };",
      "additional": [
        {
          "textField": "- HTMLWepbackPlugin creates HTML file in /dist folder. It is possible to pass in a custom template"
        },
        {
          "textField": "- Loaders are applied in reverse order =&gt; ['style-loader', 'css-loader']"
        }
      ],
      "tags": ["#bundler", "#js"],
      "id": 2
    },
    {
      "name": "Git",
      "documentation": "https://git-scm.com/book/en/v2",
      "description": "Version management tool",
      "installation": "Linux installation:",
      "installSnippet": " sudo apt install git-all",
      "implementation": "CLI commands for setting up local and remote repository",
      "implementationSnippet": "git init\ngit add README.md\ngit commit -m \"first commit\"\ngit branch -m master main\ngit remote add origin https://github.com/Milanche74/Notes.git\ngit push -u origin main\n\n// cloning\ngit clone <link> <set-name (opt)>",
      "additional": [
        {
          "textField": "- On Linux, authentication key is required for pull and push requests<br>"
        },
        {
          "textField": "* Will add info about branching"
        }
      ],
      "tags": ["#version-control"],
      "id": 3
    },
    {
      "name": "Lit",
      "documentation": "https://lit.dev/docs/",
      "description": "Library that covers usage of web components",
      "installation": "NPM Install:",
      "installSnippet": "npm i lit",
      "implementation": "Import lit to JS file, declare and export a class and set it up with properties, styles and render method.<br>",
      "implementationSnippet": "import {LitElement, html} from 'lit';\n\nclass ToDoList extends LitElement {\n  static properties = {\n    listItems: {},\n  };\n\n  constructor() {\n    super();\n    this.listItems = [\n      {text: 'Start Lit tutorial', completed: true},\n      {text: 'Make to-do list', completed: false},\n    ];\n  }\n\n  render() {\n    return html`\n      <h2>To Do</h2>\n      <ul>\n         <!-- TODO: Render list items. -->\n      </ul>\n      <input id=\"newitem\" aria-label=\"New item\">\n      <button @click=${this.addToDo}>Add</button>\n    `;\n  }\n\n  // TODO: Add click handler.\n  addToDo() {}\n}\ncustomElements.define('todo-list', ToDoList);\n\n\n// set or remove attr based on expression\n\n<p ?hidden=${this.isHidden}>I may be in hiding.</p>\n\n\n// custom converter \n\nstatic properties = {\n    data: {\n      converter: (attrValue) => {\n        if (attrValue) return JSON.parse(attrValue);\n      },\n    },\n    editable: { type: Boolean },\n  };\n",
      "additional": [
        {
          "textField": "- Events must have a callback when passing a certain data =((e) =&gt;{}) !!!"
        },
        {
          "textField": "- Custom properties are inheritable"
        },
        {
          "textField": "- There has to be a custom converter for attr values that are of type object/array"
        }
      ],
      "tags": ["#web-components", "#library"],
      "id": 4
    },
    {
      "name": "Babel",
      "documentation": "https://babeljs.io/docs/en/",
      "description": "Javascript Compiler tool",
      "installation": "Run these commands to prepare configuration with webpack:",
      "installSnippet": "npm i @babel/preset-env babel-loader\n\n// for REACT \nnpm i @babel/core @babel/preset-react\n\n// there may be a need to install additional plugins:\nnpm i core-js regeneration-runtime etc",
      "implementation": "babel.config.json file handles presets and plugins",
      "implementationSnippet": "// in babel.config.json\n\n{\n  \"presets\": [\"@babel/preset-env\", \"@babel/preset-react\"],\n  \"plugins\": [\n    [\n      \"@babel/plugin-proposal-class-properties\",\n      {\n        \"loose\": true\n      }\n    ],\n    [\"@babel/plugin-proposal-private-methods\", { \"loose\": true }]\n  ]\n}\n\n// in webpack.config.js\n\nmodule: {\n    rules: [\n      {\n        test: /\\.js$/,\n        exclude: /node_modules/,\n        use: {\n          loader: \"babel-loader\",\n          options: {\n            presets: [\"@babel/preset-env\"],\n          },\n        },\n      },\n    ],\n  },\n",
      "additional": [],
      "tags": ["#compiler", "#js"],
      "id": 5
    },
    {
      "name": "ESLint",
      "documentation": "https://eslint.org/docs/user-guide/getting-started",
      "description": "Linter tool for identifying and reporting on JavaScript patterns.",
      "installation": "Install inside project folder:",
      "installSnippet": "npm install eslint --save-dev\n\n// init a config file from CLI \nnpm init @eslint/config",
      "implementation": "Edit configuration file: Add plugins and set rules.&nbsp;",
      "implementationSnippet": "module.exports = {\n  env: {\n    browser: true,\n    es2021: true,\n  },\n  extends: [\"plugin:wc/recommended\", \"plugin:lit/recommended\"],\n  parserOptions: {\n    ecmaVersion: \"latest\",\n    sourceType: \"module\",\n  },\n  rules: {},\n};\n\n// run command from terminal\nnpx eslint --fix .",
      "additional": [
        {
          "textField": "- ESLint should be used as code quality tool, not a formatter."
        },
        {
          "textField": "- It's recommended to define script in package.json that will run multiple linters"
        }
      ],
      "tags": ["#linter", "#formatter", "#code-quality"],
      "id": 6
    },
    {
      "name": "Prettier",
      "documentation": "https://prettier.io/docs/en/install.html",
      "description": "Code formatter tool",
      "installation": "Despite it being integrated in code editor, it is recommended to initialize Prettier in each project<br>",
      "installSnippet": "npm install --save-dev --save-exact prettier",
      "implementation": "Configure specific rules in prettierrc.json file. It will have precedence to code editor configs.<br>When using as an extension in code editor, add configuration to settings.json in the editor<br>",
      "implementationSnippet": "{\n  \"trailingComma\": \"es5\",\n  \"printWidth\": 100,\n  \"semi\": true,\n  \"singleQuote\": true\n}\n\n// command to formatt all files\nnpx prettier --write .\n\n// configure on save\n \"editor.formatOnSave\": true,",
      "additional": [
        {
          "textField": "- Might need additional packages for integrations with other linters.&nbsp;"
        },
        {
          "textField": "- Add prettierignore file to specify files to be ignored<br>"
        }
      ],
      "tags": ["#formatter", "#code-quality"],
      "id": 7
    },
    {
      "name": "HighCharts",
      "documentation": "https://www.highcharts.com/demo/bar-basic",
      "description": "Library that allows superior data visualization",
      "installation": "NPM installation",
      "installSnippet": "npm install highcharts --save\n\n//addition for REACT \nnpm i highcharts-react-official --save",
      "implementation": "For React:<br>- import both Highcharts modules and define props for HC component<br>- describe chart in options object",
      "implementationSnippet": "<HighchartsReact highcharts={Highcharts} options={chartOptions} />\n\n// define options \n          {\n            title: {\n              text: i18n.t('population')\n            },\n            yAxis: {\n              title: {\n                text: i18n.t('values')\n              }\n            },\n            series: [\n              {\n                name: i18n.t('population'), \n                data: getPopulation(data),\n              },\n              {\n                name: i18n.t('projected'),\n                data: getEstimatedPopulation(data),\n              },\n            ],\n          };",
      "additional": [
        {
          "textField": "- It is possible to apply custom styling, will do furher research"
        }
      ],
      "tags": ["#react", "#data-visualization", "#plugin", "#library"],
      "id": 8
    },
    {
      "name": "Lodash",
      "documentation": "https://lodash.com/",
      "description": "A modern Javascript utility library delivering modularity, performance &amp; extras.",
      "installation": "NPM Install:&nbsp;",
      "installSnippet": "npm i --save lodash",
      "implementation": "Usefull methods:<br>- reject();<br>- flow();<br>- get();<br>- isNil();<br>- map();<br>- uniq();",
      "implementationSnippet": "const someFunc = flow(\n  reject(flow(get('projected'), isNil)),\n  lmap(({year, projected}) => [year, projected])\n)\nlet arrayOfOrigValues = uniq(data._value.map(({ city }) => city));",
      "additional": [],
      "tags": ["#library", "#data-handler"],
      "id": 9
    },
    {
      "name": "React-WordCloud",
      "documentation": "https://www.npmjs.com/package/react-wordcloud",
      "description": "Word-cloud component with interactive features",
      "installation": "NPM installation: Package requires react 16.13.0 as peer dependency",
      "installSnippet": "npm install --save  react-wordcloud --legacy-peer-deps",
      "implementation": "Import package to JS file and define props like !words, ?options and ?callbacks",
      "implementationSnippet": "import React from 'react';\nimport ReactWordcloud from 'react-wordcloud';\n \nconst words = [\n  {\n    text: 'told',\n    value: 64,\n  },\n  {\n    text: 'mistake',\n    value: 11,\n  },\n  {\n    text: 'thought',\n    value: 16,\n  },\n  {\n    text: 'bad',\n    value: 17,\n  },\n]\nconst callbacks = {\n  // some functions\n}\nconst options = {\n  rotations: 2,\n  rotationAngles: [-90, 0],\n};\n \nfunction SimpleWordcloud() {\n  return <ReactWordcloud words={words} />\n}",
      "additional": [
        {
          "textField": "- Callbacks object comes in handy for handling user events",
          "codeSnippet": "const callbacks = {\n  getWordColor: word => word.value > 50 ? \"blue\" : \"red\",\n  onWordClick: console.log,\n  onWordMouseOver: console.log,\n  getWordTooltip: word => `${word.text} (${word.value}) [${word.value > 50 ? \"good\" : \"bad\"}]`,\n}"
        }
      ],
      "tags": ["#library", "#react", "#plugin", "#data-visualization"],
      "id": 10
    },
    {
      "name": "i18n",
      "documentation": "https://www.i18next.com/overview/getting-started",
      "description": "<span data-offset-key=\"ed466c53b77c41caaad19142c853679d:0\">i18next is an </span><strong data-slate-leaf=\"true\" data-offset-key=\"ed466c53b77c41caaad19142c853679d:1\" class=\"r-b88u0q\">internationalization-framework</strong><span data-offset-key=\"ed466c53b77c41caaad19142c853679d:2\" data-slate-fragment=\"JTdCJTIyb2JqZWN0JTIyJTNBJTIyZG9jdW1lbnQlMjIlMkMlMjJkYXRhJTIyJTNBJTdCJTdEJTJDJTIybm9kZXMlMjIlM0ElNUIlN0IlMjJvYmplY3QlMjIlM0ElMjJibG9jayUyMiUyQyUyMnR5cGUlMjIlM0ElMjJwYXJhZ3JhcGglMjIlMkMlMjJpc1ZvaWQlMjIlM0FmYWxzZSUyQyUyMmRhdGElMjIlM0ElN0IlN0QlMkMlMjJub2RlcyUyMiUzQSU1QiU3QiUyMm9iamVjdCUyMiUzQSUyMnRleHQlMjIlMkMlMjJsZWF2ZXMlMjIlM0ElNUIlN0IlMjJvYmplY3QlMjIlM0ElMjJsZWFmJTIyJTJDJTIydGV4dCUyMiUzQSUyMkkxOG5leHQlMjBpcyUyMGFuJTIwJTIyJTJDJTIybWFya3MlMjIlM0ElNUIlNUQlMkMlMjJzZWxlY3Rpb25zJTIyJTNBJTVCJTVEJTdEJTJDJTdCJTIyb2JqZWN0JTIyJTNBJTIybGVhZiUyMiUyQyUyMnRleHQlMjIlM0ElMjJpbnRlcm5hdGlvbmFsaXphdGlvbi1mcmFtZXdvcmslMjIlMkMlMjJtYXJrcyUyMiUzQSU1QiU3QiUyMm9iamVjdCUyMiUzQSUyMm1hcmslMjIlMkMlMjJ0eXBlJTIyJTNBJTIyYm9sZCUyMiUyQyUyMmRhdGElMjIlM0ElN0IlN0QlN0QlNUQlMkMlMjJzZWxlY3Rpb25zJTIyJTNBJTVCJTVEJTdEJTJDJTdCJTIyb2JqZWN0JTIyJTNBJTIybGVhZiUyMiUyQyUyMnRleHQlMjIlM0ElMjIlMjB3cml0dGVuJTIwaW4lMjBhbmQlMjBmb3IlMjBKYXZhU2NyaXB0JTIyJTJDJTIybWFya3MlMjIlM0ElNUIlNUQlMkMlMjJzZWxlY3Rpb25zJTIyJTNBJTVCJTVEJTdEJTVEJTJDJTIya2V5JTIyJTNBJTIyNzRiZjkwNjA3ZjI1NGRjMzhmYWQ3M2FhMjU5MWJjZGUlMjIlN0QlNUQlMkMlMjJrZXklMjIlM0ElMjI3MTA2OTgyNDdjYjI0NDRhYWZkOTkzMDdiMzZhMmNkZSUyMiU3RCU1RCUyQyUyMmtleSUyMiUzQSUyMmJjMmJiZjUwNGRmODQzMGJiYWY1NWVlMzA1ZmIyNjg4JTIyJTdE\"> written in and for JavaScript</span>",
      "installation": "NPM install:",
      "installSnippet": "npm i --save i18next",
      "implementation": "Step 1 =&gt; make new .js file to initialize and configure i18next;<br>Step 2 =&gt; import created module and use it&nbsp;<br>Step 3 =&gt; import i18next from node_modules to use event listeners",
      "implementationSnippet": "// STEP 1\n\nimport i18next from 'i18next';\n\nimport enTranslation from './locales/en-US.json';\nimport huTranslation from './locales/hu-HU.json';\nimport srTranslation from './locales/sr-RS.json';\n\ni18next\n  .init({\n    lng: 'en-US',\n    fallbackLng: 'en-US',\n    debug: true,\n    resources: {\n      'en-US': {\n        translation: enTranslation,\n      },\n    },\n  })\n  .then(function (t) {\n    // initialized and ready to go!\n    console.info('i18next is initialized.', t('welcome'));\n  });\n\ni18next.addResourceBundle('hu-HU', 'translation', huTranslation);\ni18next.addResourceBundle('sr-RS', 'translation', srTranslation);\n\nexport default i18next;\n\n\n//STEP 2 \n\nheader.innerText = i18n.t('title');\n\n\n// STEP 3\n\ni18next.on('languageChanged', () => {\n  renderAppInterface();\n});\n",
      "additional": [
        {
          "textField": "There is possibly a more optimised approach for using with JS frameworks - ex. react-i18next"
        }
      ],
      "tags": ["#framework", "#internationalization", "#js"],
      "id": 11
    },
    {
      "name": "React-range",
      "documentation": "https://github.com/tajo/react-range/tree/master/examples",
      "description": "Range slider component for React",
      "installation": "NPM Installation",
      "installSnippet": "npm i react-range",
      "implementation": "Define a component and set attributes as given:&nbsp;",
      "implementationSnippet": "return(\n  <Range\n    values={values}\n    step={STEP}\n    min={MIN}\n    max={MAX}\n    rtl={rtl}\n    onChange={(values) => setValues(values)}\n    renderTrack={({ props, children }) => (\n      <div\n        onMouseDown={props.onMouseDown}\n        onTouchStart={props.onTouchStart}\n        style={{\n          ...props.style,\n          height: '36px',\n          display: 'flex',\n          width: '100%'\n        }}\n      >\n        <div\n          ref={props.ref}\n          style={{\n            height: '5px',\n            width: '100%',\n            borderRadius: '4px',\n            background: getTrackBackground({\n              values,\n              colors: ['#ccc', '#548BF4', '#ccc'],\n              min: MIN,\n              max: MAX,\n              rtl\n            }),\n            alignSelf: 'center'\n          }}\n        >\n          {children}\n        </div>\n      </div>\n    )}\n    renderThumb={({ index, props, isDragged }) => (\n      <div\n        {...props}\n        style={{\n          ...props.style,\n          height: '42px',\n          width: '42px',\n          borderRadius: '4px',\n          backgroundColor: '#FFF',\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n          boxShadow: '0px 2px 6px #AAA'\n        }}\n      >\n        <div\n          style={{\n            position: 'absolute',\n            top: '-28px',\n            color: '#fff',\n            fontWeight: 'bold',\n            fontSize: '14px',\n            fontFamily: 'Arial,Helvetica Neue,Helvetica,sans-serif',\n            padding: '4px',\n            borderRadius: '4px',\n            backgroundColor: '#548BF4'\n          }}\n        >\n          {values[index].toFixed(1)}\n        </div>\n        <div\n          style={{\n            height: '16px',\n            width: '5px',\n            backgroundColor: isDragged ? '#548BF4' : '#CCC'\n          }}\n        />\n      </div>\n    )}\n  />\n);",
      "additional": [
        {
          "textField": "- If values are dynamically loaded, calculate steps attribute based on those values;"
        },
        {
          "textField": "- Track background color can be determined using getTrackBackground() based on values."
        }
      ],
      "tags": ["#plugin", "#react"],
      "id": 12
    }
  ],
  "text": "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"
}
